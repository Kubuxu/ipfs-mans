name: daemon
command: ipfs daemon
options:
  - name: offline
    type: bool
    description: Run offline. Do not connect to the rest of the network but provide local API.
  - name: manage-fdlimit
    type: bool
    default: true
    description: Check and raise file descriptor limits if needed
  - name: enable-gc
    type: bool
    description: Enable automatic periodic repo garbage collection
  - name: disable-transport-encryption
    type: bool
    description: Disable transport encryption (for debugging protocols)
  - name: unrestricted-api
    type: bool
    description: This option has no effect since v0.4.3
  - name: mount-ipns
    type: string
    description: Path to the mountpoint for IPNS (if using --mount). Defaults to config setting.
  - name: mount-ipfs
    type: string
    description: Path to the mountpoint for IPFS (if using --mount). Defaults to config setting.
  - name: writable
    type: bool
    description: Enable writing objects (with POST, PUT and DELETE)
  - name: mount
    type: bool
    description: Mounts IPFS to the filesystem
  - name: routing
    type: string
    default: dht
    description: Overrides the routing option
  - name: init
    type: bool
    description: Initialize IPFS with default settings if not already initialized
help:
  tagline: Run a network-connected IPFS node.
  short: |
    'ipfs daemon' runs a persistent IPFS daemon that can serve commands
    over the network. Most applications that use IPFS will do so by
    communicating with a daemon over the HTTP API. While the daemon is
    running, calls to 'ipfs' commands will be sent over the network to
    the daemon.
  long: |
    The daemon will start listening on ports on the network, which are
    documented in (and can be modified through) 'ipfs config Addresses'.
    For example, to change the 'Gateway' port:
    
        ipfs config Addresses.Gateway /ip4/127.0.0.1/tcp/8082
    
    The API address can be changed the same way:
    
       ipfs config Addresses.API /ip4/127.0.0.1/tcp/5002
    
    Make sure to restart the daemon after changing addresses.
    
    By default, the gateway is only accessible locally. To expose it to
    other computers in the network, use 0.0.0.0 as the ip address:
    
       ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
    
    Be careful if you expose the API. It is a security risk, as anyone could
    control your node remotely. If you need to control the node remotely,
    make sure to protect the port as you would other services or database
    (firewall, authenticated proxy, etc).
    
    HTTP Headers
    
    IPFS supports passing arbitrary headers to the API and Gateway. You can
    do this by setting headers on the API.HTTPHeaders and Gateway.HTTPHeaders
    keys:
    
    	ipfs config --json API.HTTPHeaders.X-Special-Header '["so special :)"]'
    	ipfs config --json Gateway.HTTPHeaders.X-Special-Header '["so special :)"]'
    
    Note that the value of the keys is an _array_ of strings. This is because
    headers can have more than one value, and it is convenient to pass through
    to other libraries.
    
    CORS Headers (for API)
    
    You can setup CORS headers the same way:
    
    	ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["example.com"]'
    	ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '["PUT", "GET", "POST"]'
    	ipfs config --json API.HTTPHeaders.Access-Control-Allow-Credentials '["true"]'
    
    Shutdown
    
    To shutdown the daemon, send a SIGINT signal to it (e.g. by pressing 'Ctrl-C')
    or send a SIGTERM signal to it (e.g. with 'kill'). It may take a while for the
    daemon to shutdown gracefully, but it can be killed forcibly by sending a
    second signal.
    
    IPFS_PATH environment variable
    
    ipfs uses a repository in the local file system. By default, the repo is
    located at ~/.ipfs. To change the repo location, set the $IPFS_PATH
    environment variable:
    
        export IPFS_PATH=/path/to/ipfsrepo
    
    DEPRECATION NOTICE
    
    Previously, IPFS used an environment variable as seen below:
    
       export API_ORIGIN="http://localhost:8888/"
    
    This is deprecated. It is still honored in this version, but will be removed
    in a future version, along with this notice. Please move to setting the HTTP
    Headers.
